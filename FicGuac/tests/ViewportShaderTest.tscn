[gd_scene load_steps=54 format=2]

[ext_resource path="res://motion_ai/pawn/BasePawn.tscn" type="PackedScene" id=1]
[ext_resource path="res://terrain/farm/Farm.tscn" type="PackedScene" id=2]
[ext_resource path="res://tests/ViewportShaderTest.gd" type="Script" id=3]
[ext_resource path="res://scenes/SceneDefaultEnvironment.tres" type="Environment" id=4]
[ext_resource path="res://terrain/mat_terrain_grass_textured.tres" type="Material" id=5]
[ext_resource path="res://buildings/Hut.tscn" type="PackedScene" id=9]
[ext_resource path="res://special_effects/mask64_dither2x2.png" type="Texture" id=10]
[ext_resource path="res://special_effects/viewport_shader_templates/SilhouetteFillShader.material" type="Material" id=11]
[ext_resource path="res://tests/test_assets/pr01_floyd_steinberg.tres" type="SpriteFrames" id=12]
[ext_resource path="res://terrain/trees/Woods.tscn" type="PackedScene" id=13]
[ext_resource path="res://util/CollisionRenderMaterial.tres" type="Material" id=14]
[ext_resource path="res://tests/test_assets/pr01_riemersma.tres" type="SpriteFrames" id=15]
[ext_resource path="res://tests/test_assets/pr01_posterize.tres" type="SpriteFrames" id=16]
[ext_resource path="res://tests/test_assets/pr01_order_dither.tres" type="SpriteFrames" id=17]
[ext_resource path="res://gui/TiaoLetter.ttf" type="DynamicFontData" id=18]
[ext_resource path="res://scenes/CameraRig.tscn" type="PackedScene" id=19]
[ext_resource path="res://special_effects/HidingMesh.tscn" type="PackedScene" id=20]

[sub_resource type="QuadMesh" id=1]
size = Vector2( 3.5, 3.5 )

[sub_resource type="VisualShaderNodeInput" id=2]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "ViewportTexture"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "AlphaTexture"

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform sampler2D ViewportTexture;
uniform sampler2D AlphaTexture;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(ViewportTexture, n_out2p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// TextureUniform:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 n_tex_read = texture(AlphaTexture, n_out6p0.xy);
		n_out7p0 = n_tex_read.rgb;
		n_out7p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;
	ALPHA = n_out7p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 151.498, 75 )
flags/ambient_light_disabled = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 700, 100 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -20, 100 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 240, 100 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 40, 360 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( 240, 300 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 0, 0, 6, 0, 7, 0, 7, 1, 0, 1 )

[sub_resource type="ViewportTexture" id=7]
viewport_path = NodePath("CameraRig/XrayWorld")

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
render_priority = 1
shader = SubResource( 6 )
shader_param/ViewportTexture = SubResource( 7 )
shader_param/AlphaTexture = ExtResource( 10 )

[sub_resource type="SphereMesh" id=9]
height = 4.0

[sub_resource type="VisualShaderNodeInput" id=10]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=11]
uniform_name = "Viewport_Texture"

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform sampler2D Viewport_Texture;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(Viewport_Texture, n_out2p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
flags/ambient_light_disabled = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 500, 120 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 40, 120 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( 280, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=13]
viewport_path = NodePath("CameraRig/XrayWorld")

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/Viewport_Texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeInput" id=15]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=16]
uniform_name = "Viewport_Texture"
texture_type = 1

[sub_resource type="VisualShader" id=17]
code = "shader_type spatial;
render_mode specular_schlick_ggx, depth_test_disable, unshaded, shadows_disabled, ambient_light_disabled;

uniform sampler2D Viewport_Texture : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(Viewport_Texture, n_out2p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
flags/ambient_light_disabled = true
flags/depth_test_disable = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 500, 120 )
nodes/fragment/2/node = SubResource( 15 )
nodes/fragment/2/position = Vector2( 0, 120 )
nodes/fragment/5/node = SubResource( 16 )
nodes/fragment/5/position = Vector2( 260, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 0, 0 )

[sub_resource type="ViewportTexture" id=18]
viewport_path = NodePath("CameraRig/XrayWorld")

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
render_priority = 1
shader = SubResource( 17 )
shader_param/Viewport_Texture = SubResource( 18 )

[sub_resource type="SphereMesh" id=20]
resource_local_to_scene = true
height = 2.5
radial_segments = 4
rings = 1

[sub_resource type="VisualShaderNodeCompare" id=21]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0 ), 2, 1e-05 ]
type = 1
function = 2

[sub_resource type="VisualShaderNodeColorConstant" id=22]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeSwitch" id=23]

[sub_resource type="VisualShaderNodeColorUniform" id=24]
output_port_for_preview = 1
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=26]

[sub_resource type="VisualShaderNodeColorFunc" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]
operator = 2

[sub_resource type="VisualShader" id=29]
code = "shader_type spatial;
render_mode specular_schlick_ggx, depth_test_disable, unshaded, shadows_disabled, ambient_light_disabled;

uniform vec4 ColorUniform : hint_color;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = ColorUniform.rgb;
	float n_out3p1 = ColorUniform.a;

// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out4p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorOp:9
	vec3 n_out9p0 = n_out3p0 * n_out5p0;

// ColorFunc:6
	vec3 n_out6p0;
	{
		vec3 c = n_out5p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out6p0 = vec3(max3, max3, max3);
	}

// Color:11
	vec3 n_out11p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out11p1 = 1.000000;

// Compare:10
	bool n_out10p0;
	{
		bvec3 _bv = greaterThan(n_out6p0, n_out11p0);
		n_out10p0 = all(_bv);
	}

// VectorSwitch:15
	vec3 n_out15p0;
	if(n_out10p0)
	{
		n_out15p0 = vec3(n_out3p1);
	}
	else
	{
		n_out15p0 = vec3(n_out10p0 ? 1.0 : 0.0);
	}

// Output:0
	ALBEDO = n_out9p0;
	ALPHA = dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 152.906, 89.9006 )
flags/ambient_light_disabled = true
flags/depth_test_disable = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 860, 140 )
nodes/fragment/3/node = SubResource( 24 )
nodes/fragment/3/position = Vector2( -260, 0 )
nodes/fragment/4/node = SubResource( 25 )
nodes/fragment/4/position = Vector2( -480, 180 )
nodes/fragment/5/node = SubResource( 26 )
nodes/fragment/5/position = Vector2( -260, 220 )
nodes/fragment/6/node = SubResource( 27 )
nodes/fragment/6/position = Vector2( 60, 220 )
nodes/fragment/9/node = SubResource( 28 )
nodes/fragment/9/position = Vector2( 60, 0 )
nodes/fragment/10/node = SubResource( 21 )
nodes/fragment/10/position = Vector2( 260, 240 )
nodes/fragment/11/node = SubResource( 22 )
nodes/fragment/11/position = Vector2( 80, 300 )
nodes/fragment/15/node = SubResource( 23 )
nodes/fragment/15/position = Vector2( 500, 180 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 6, 0, 3, 0, 9, 0, 11, 0, 10, 1, 6, 0, 10, 0, 9, 0, 0, 0, 3, 1, 15, 1, 10, 0, 15, 0, 10, 0, 15, 2, 15, 0, 0, 1, 5, 0, 9, 1 )

[sub_resource type="ViewportTexture" id=30]
viewport_path = NodePath("CameraRig/SilhouetteWorld")

[sub_resource type="ShaderMaterial" id=31]
resource_local_to_scene = true
shader = SubResource( 29 )
shader_param/ColorUniform = Color( 0.00784314, 0.996078, 0.92549, 1 )
shader_param/tex_frg_5 = SubResource( 30 )

[sub_resource type="NavigationMesh" id=63]
vertices = PoolVector3Array( 1.8, 0.5, -7.3, 2.3, 0.5, -7.7, 2.3, 0.5, -9.5, -9.5, 0.5, -9.5, -9.5, 0.5, -1.5, 1.8, 0.5, -1.6, 1.8, 0.5, -7.3, -9.5, 0.5, -9.5, 8.9, 0.5, -7.3, 8.9, 0.5, -1.8, 9.5, 0.5, -1.8, 9.5, 0.5, -9.5, 8.7, 0.5, -7.6, 9.5, 0.5, -9.5, 2.3, 0.5, -9.5, 2.3, 0.5, -7.7, 8.7, 0.5, -7.6, 8.9, 0.5, -7.3, 9.5, 0.5, -9.5, 2.5, 3.75, -7, 2.5, 3.75, -1.4, 8.1, 3.75, -1.4, 8.1, 3.75, -7, 5.3, 4.75, -7, 5.3, 4.75, -1.4, 4.9, 1, -1.4, 5.8, 1, -1.4, 6, 1, -2.1, 4.7, 1, -2.1, 3.4, 1, -2.2, 4.7, 1, -2.1, 6, 1, -2.1, 7.3, 1, -2.2, 7.3, 1, -6.1, 3.4, 1, -6.1, 5.8, 0.75, -1, 5.8, 1, -1.4, 4.9, 1, -1.4, 4.8, 0.75, -0.8, 9.5, 0.5, -1.8, 8.9, 0.5, -1.8, 8.9, 0.5, -1, 9.5, 0.5, 9.5, 9.5, 0.5, 9.5, 8.9, 0.5, -1, 8.5, 0.5, -0.599999, 5.8, 0.75, -1, 4.8, 0.75, -0.8, 4.5, 0.75, -0.599999, 2.7, 0.5, 9.5, 9.5, 0.5, 9.5, 6.2, 0.75, -0.599999, 9.5, 0.5, 9.5, 8.5, 0.5, -0.599999, 6.2, 0.75, -0.599999, 4.5, 0.75, -0.599999, 2.8, 0.5, -0.599999, 2.7, 0.5, 9.5, 2.7, 0.5, 9.5, 2.8, 0.5, -0.599999, 2.2, 0.5, -0.599999, 2.7, 0.5, 9.5, 2.2, 0.5, -0.599999, 1.9, 0.5, -0.8, 2.7, 0.5, 9.5, 1.9, 0.5, -0.8, 1.8, 0.5, -1.6, -3.4, 0.5, 9.5, -9.5, 0.5, -1.5, -9.5, 0.5, 9.5, -3.4, 0.5, 9.5, 1.8, 0.5, -1.6 )
polygons = [ PoolIntArray( 1, 0, 2 ), PoolIntArray( 2, 0, 3 ), PoolIntArray( 5, 4, 6 ), PoolIntArray( 6, 4, 7 ), PoolIntArray( 9, 8, 10 ), PoolIntArray( 10, 8, 11 ), PoolIntArray( 15, 14, 12 ), PoolIntArray( 12, 14, 13 ), PoolIntArray( 16, 18, 17 ), PoolIntArray( 22, 21, 23 ), PoolIntArray( 23, 21, 24 ), PoolIntArray( 23, 24, 20 ), PoolIntArray( 23, 20, 19 ), PoolIntArray( 26, 25, 27 ), PoolIntArray( 27, 25, 28 ), PoolIntArray( 30, 29, 31 ), PoolIntArray( 31, 29, 32 ), PoolIntArray( 32, 29, 34 ), PoolIntArray( 32, 34, 33 ), PoolIntArray( 36, 35, 37 ), PoolIntArray( 37, 35, 38 ), PoolIntArray( 40, 39, 41 ), PoolIntArray( 41, 39, 42 ), PoolIntArray( 45, 44, 43 ), PoolIntArray( 47, 46, 48 ), PoolIntArray( 48, 46, 51 ), PoolIntArray( 48, 51, 49 ), PoolIntArray( 49, 51, 50 ), PoolIntArray( 54, 53, 52 ), PoolIntArray( 57, 56, 55 ), PoolIntArray( 60, 59, 58 ), PoolIntArray( 63, 62, 61 ), PoolIntArray( 65, 64, 66 ), PoolIntArray( 66, 64, 67 ), PoolIntArray( 69, 68, 70 ), PoolIntArray( 70, 68, 71 ) ]
geometry/parsed_geometry_type = 1
geometry/collision_mask = 4293918723
cell/size = 0.1
cell/height = 0.25
agent/height = 0.81
agent/radius = 0.5
agent/max_climb = 0.5
region/min_size = 0.0

[sub_resource type="PlaneMesh" id=59]
size = Vector2( 20, 20 )

[sub_resource type="ConcavePolygonShape" id=60]
data = PoolVector3Array( 10, 0, 10, -10, 0, 10, 10, 0, -10, -10, 0, 10, -10, 0, -10, 10, 0, -10 )

[sub_resource type="SphereMesh" id=61]
radius = 0.5
radial_segments = 4
rings = 1
is_hemisphere = true

[sub_resource type="DynamicFont" id=62]
font_data = ExtResource( 18 )

[node name="XrayShaderTest" type="Spatial"]
script = ExtResource( 3 )

[node name="CameraRig" parent="." instance=ExtResource( 19 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 64, 64, 64 )
basic_move_rate = 100.0
max_camera_size = 20
min_camera_size = 5
camera_size = 15
zoom_step = 5
move_enabled = true
zoom_enabled = true
move_clamping_extents = Vector2( 10, 10 )

[node name="CoreCamera" parent="CameraRig" index="2"]
size = 15.0

[node name="Camera" parent="CameraRig/XrayWorld" index="0"]
transform = Transform( 0.707107, -0.408244, 0.577353, 0, 0.816501, 0.577344, -0.707107, -0.408244, 0.577353, 64, 64, 64 )
size = 15.0

[node name="Camera" parent="CameraRig/SilhouetteWorld" index="0"]
transform = Transform( 0.707107, -0.408244, 0.577353, 0, 0.816501, 0.577344, -0.707107, -0.408244, 0.577353, 64, 64, 64 )
size = 15.0

[node name="XrayPawnAlpha" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 2.1, 4 )
position_algorithm = 1
navigation = NodePath("../Navigation")

[node name="HidingMesh" parent="XrayPawnAlpha" instance=ExtResource( 20 )]
transform = Transform( 0.707107, -0.408244, 0.577353, 0, 0.8165, 0.577345, -0.707107, -0.408244, 0.577353, 10, 10, 10 )
mesh = SubResource( 1 )
material/0 = SubResource( 8 )
target_camera = NodePath("../../CameraRig/CoreCamera")
test_source = NodePath("..")
animation_length = 0.1

[node name="XrayPawnDefault" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.7, 1.6, -4.8 )
position_algorithm = 1
navigation = NodePath("../Navigation")

[node name="VisualSprite" parent="XrayPawnDefault" index="2"]
frames = ExtResource( 16 )

[node name="HidingMesh" parent="XrayPawnDefault" instance=ExtResource( 20 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 5, 5 )
mesh = SubResource( 9 )
material/0 = SubResource( 14 )
target_camera = NodePath("../../CameraRig/CoreCamera")
test_source = NodePath("../../XrayPawnDefault")
animation_length = 0.1

[node name="XrayPawnNoDepth" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 2.1, -3.7 )
position_algorithm = 1
navigation = NodePath("../Navigation")

[node name="VisualSprite" parent="XrayPawnNoDepth" index="2"]
frames = ExtResource( 15 )

[node name="HidingMesh" parent="XrayPawnNoDepth" instance=ExtResource( 20 )]
material/0 = SubResource( 19 )
target_camera = NodePath("../../CameraRig/CoreCamera")
animation_length = 0.1

[node name="MultiplyPawn" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 2.1, 7.5 )
position_algorithm = 1
navigation = NodePath("../Navigation")

[node name="VisualSprite" parent="MultiplyPawn" index="2"]
frames = ExtResource( 17 )

[node name="MultiplyCrystal" type="MeshInstance" parent="MultiplyPawn"]
layers = 32
mesh = SubResource( 20 )
material/0 = SubResource( 31 )

[node name="FillPawn" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.6, 2.1, 2.3 )
position_algorithm = 1
navigation = NodePath("../Navigation")

[node name="VisualSprite" parent="FillPawn" index="2"]
frames = ExtResource( 12 )

[node name="FillCrystal" type="MeshInstance" parent="FillPawn"]
layers = 32
mesh = SubResource( 20 )
material/0 = ExtResource( 11 )

[node name="Navigation" type="Navigation" parent="."]

[node name="NavigationMeshInstance" type="NavigationMeshInstance" parent="Navigation"]
navmesh = SubResource( 63 )

[node name="Floor" type="StaticBody" parent="Navigation/NavigationMeshInstance"]

[node name="Mesh" type="MeshInstance" parent="Navigation/NavigationMeshInstance/Floor"]
layers = 2147483649
mesh = SubResource( 59 )
material/0 = ExtResource( 5 )

[node name="Shape" type="CollisionShape" parent="Navigation/NavigationMeshInstance/Floor"]
shape = SubResource( 60 )

[node name="Hut" parent="Navigation/NavigationMeshInstance" instance=ExtResource( 9 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.3, 0, -4.2 )
hiding_corner = 1

[node name="Farm" parent="Navigation/NavigationMeshInstance" instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -9, 0, -9 )
_plot_size = Vector2( 10, 10 )
_crop_type = 5

[node name="Woods" parent="Navigation/NavigationMeshInstance" instance=ExtResource( 13 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -9, 0, 2 )
_woods_size = Vector2( 8, 8 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 4 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -0.0658214, 0.705573, 0.705573, 0, -0.707107, 0.707107, 0.997831, 0.0465428, 0.0465428, 0, 5, 0 )
shadow_enabled = true
shadow_contact = 0.4
directional_shadow_mode = 0

[node name="Telepointer" type="MeshInstance" parent="."]
transform = Transform( -0.707107, -2.30405e-07, 0.707107, 3.25841e-07, -1, 0, 0.707107, 2.30405e-07, 0.707107, 1, 3, 1 )
layers = 2
mesh = SubResource( 61 )
material/0 = null

[node name="TelepointerAlt" type="MeshInstance" parent="Telepointer"]
transform = Transform( 1, -1.42109e-14, 0, -1.42109e-14, 1, -1.42109e-14, 0, 0, 1, 0, 0, 0 )
layers = 4
mesh = SubResource( 61 )
material/0 = ExtResource( 14 )

[node name="FloorCast" type="RayCast" parent="Telepointer"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0 )
enabled = true
cast_to = Vector3( 0, 2, 0 )

[node name="ObstacleCast" type="RayCast" parent="Telepointer"]
transform = Transform( 1, -1.42109e-14, 0, -1.42109e-14, 1, -1.42109e-14, 0, 0, 1, 0, 2, 0 )
enabled = true
cast_to = Vector3( 0, 1, 0 )
collision_mask = 6

[node name="GUI" type="VBoxContainer" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = -80.0
margin_right = -10.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WordLabel" type="Label" parent="GUI"]
margin_right = 1004.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 62 )
text = "Time Scale"
align = 1

[node name="SliderValue" type="Label" parent="GUI"]
margin_top = 25.0
margin_right = 1004.0
margin_bottom = 46.0
custom_fonts/font = SubResource( 62 )
text = "1.0"
align = 1

[node name="Slider" type="HSlider" parent="GUI"]
margin_top = 50.0
margin_right = 1004.0
margin_bottom = 66.0
max_value = 1.0
step = 0.05
value = 1.0
tick_count = 10
ticks_on_borders = true

[node name="BottomMargin" type="ReferenceRect" parent="GUI"]
margin_top = 70.0
margin_right = 1004.0
margin_bottom = 80.0
rect_min_size = Vector2( 0, 10 )
[connection signal="path_complete" from="XrayPawnAlpha" to="." method="_on_AnyPawn_path_complete"]
[connection signal="path_complete" from="XrayPawnDefault" to="." method="_on_AnyPawn_path_complete"]
[connection signal="path_complete" from="XrayPawnNoDepth" to="." method="_on_AnyPawn_path_complete"]
[connection signal="path_complete" from="MultiplyPawn" to="." method="_on_AnyPawn_path_complete"]
[connection signal="path_complete" from="FillPawn" to="." method="_on_AnyPawn_path_complete"]
[connection signal="value_changed" from="GUI/Slider" to="." method="_on_Slider_value_changed"]

[editable path="CameraRig"]

[editable path="XrayPawnAlpha"]

[editable path="XrayPawnDefault"]

[editable path="XrayPawnNoDepth"]

[editable path="MultiplyPawn"]

[editable path="FillPawn"]
