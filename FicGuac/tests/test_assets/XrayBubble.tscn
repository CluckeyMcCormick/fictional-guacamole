[gd_scene load_steps=6 format=2]

[sub_resource type="SphereMesh" id=1]
radius = 2.0
height = 4.0
radial_segments = 4
rings = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=3]

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out2p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -290.949, 41.75 )
flags/ambient_light_disabled = true
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 200, 160 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -260, 160 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -20, 160 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )

[node name="XrayBubble" type="MeshInstance"]
cast_shadow = 0
mesh = SubResource( 1 )
material/0 = SubResource( 5 )
